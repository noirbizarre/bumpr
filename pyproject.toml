[tool.poetry]
name = "bumpr"
version = "0.3.9.dev"
description = "Version bumper and Python package releaser"
authors = ["Axel H. <noirbizarre@gmail.com>"]
license = "LGPL"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Software Distribution",
]
keywords = [
  "version",
  "bump",
  "release",
  "tag",
]
readme = "README.md"
repository = "https://github.com/noirbizarre/bumpr"
documentation = "https://bumpr.readthedocs.io/en/stable/"
include = [
  "README.md",
  "CHANGELOG.md",
  "LICENSE"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/noirbizarre/bumpr/issues"

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
# Doc dependencies here until https://github.com/python-poetry/poetry/issues/1644
mkdocs = {version = "^1.2.3", optional = true}
mkdocs-material = {version = ">=7.3.5,<9.0.0", optional = true}
mkdocstrings = {version = ">=0.16.2,<0.18.0", optional = true}
mkdocs-include-markdown-plugin = {version = "^3.2.3", optional = true}

[tool.poetry.dev-dependencies]
black = {version = "^22.1", allow-prereleases = true}
flake8 = "^4.0.1"
invoke = "^1.6.0"
isort = "^5.10.1"
mock = "^4.0.3"
mypy = "^0.931"
pytest = "^7.2.2"
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
pytest-pythonpath = "^0.7.3"
pytest-sugar = "^0.9.4"
coverage = {extras = ["toml"], version = "^6.3"}

[tool.poetry.scripts]
bumpr = 'bumpr.__main__:main'

[tool.poetry.extras]
test = [
  "mock",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "pytest-sugar",
  "pytest-pythonpath",
]
lint = [
  "flake8",
  "mypy",
  "black",
  "isort",
]
doc = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocs-include-markdown-plugin",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = ".git build dist"
testpaths = "tests"
python_classes="*Test"
mock_use_standalone_module = true
markers = [
  "bumprc: marks tests requiring a mock config",
  "version: specify a defined version"
]

[tool.isort]
# See: https://pycqa.github.io/isort/docs/configuration/black_compatibility/
profile = "black"
multi_line_output = 3

[tool.black]
line-length = 100
experimental-string-processing = true
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs        # exclude a few common directories in the
    | \.git         # root of the project
    | \.mypy_cache
    | \.venv
    | \venv
    | updates       # Mostly generated files and SQL
  )/
  | foo.py          # also separately exclude a file named foo.py in
                    # the root of the project
)
'''

[tool.mypy]
python_version = "3.9"
exclude = "doc/*.py"

[tool.flakehell]
max-line-length = 110
exclude = [
  "doc",
  "build",
  "dist",
  ".git",
]

[tool.coverage.run]
source = ["bumpr"]
branch = true
omit = [
  "tests/*",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',
]
ignore_errors = true
